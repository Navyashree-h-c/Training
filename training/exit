[33mcommit 6ca0bda3a012fcb2302b32879a3def487264a362[m[33m ([m[1;36mHEAD -> [m[1;32mmain[m[33m)[m
Author: Navyashree H C <navyashree@redintegro.com>
Date:   Tue Nov 3 18:00:23 2020 +0530

    crud operation insert user

[1mdiff --git a/blog/__pycache__/urls.cpython-37.pyc b/blog/__pycache__/urls.cpython-37.pyc[m
[1mindex caf87dd..4c4ca26 100644[m
Binary files a/blog/__pycache__/urls.cpython-37.pyc and b/blog/__pycache__/urls.cpython-37.pyc differ
[1mdiff --git a/blog/__pycache__/views.cpython-37.pyc b/blog/__pycache__/views.cpython-37.pyc[m
[1mindex eb6d3d4..6faed6d 100644[m
Binary files a/blog/__pycache__/views.cpython-37.pyc and b/blog/__pycache__/views.cpython-37.pyc differ
[1mdiff --git a/blog/urls.py b/blog/urls.py[m
[1mindex 84a6197..5b354d6 100644[m
[1m--- a/blog/urls.py[m
[1m+++ b/blog/urls.py[m
[36m@@ -8,5 +8,7 @@[m [murlpatterns = [[m
     path('user/<int:id>', views.user_detail, name = "user_detail"),[m
     path('blogs', views.blog_list, name = "blog_list"),[m
     path('blog', views.insert_blog, name = "insert_blog"),[m
[32m+[m
     path('usersnew', views.user_new, name = "user_new"),[m
[32m+[m[32m    path('usernew', views.insert_new, name = "insert_new"),[m
 ][m
\ No newline at end of file[m
[1mdiff --git a/blog/views.py b/blog/views.py[m
[1mindex c52b5b0..42170bd 100644[m
[1m--- a/blog/views.py[m
[1m+++ b/blog/views.py[m
[36m@@ -55,5 +55,11 @@[m [mdef user_new(request):[m
         {'name': 'komal', 'email': 'komal@yahoo.com'},[m
     ][m
     return JsonResponse(data, safe=False)[m
[32m+[m
[32m+[m[32m@csrf_exempt[m
[32m+[m[32m@require_http_methods(['POST'])[m
[32m+[m[32mdef insert_new(request):[m
[32m+[m[32m    data = json.loads(request.body.decode('utf-8'))[m
[32m+[m[32m    return JsonResponse(data, safe=False)[m
     [m
 [m

[33mcommit b9981784d83ea1b4a78d6e154c86eeb5c2c7d8e6[m
Author: Navyashree H C <navyashree@redintegro.com>
Date:   Tue Nov 3 17:47:54 2020 +0530

    crud operation inserting

[1mdiff --git a/blog/__pycache__/admin.cpython-37.pyc b/blog/__pycache__/admin.cpython-37.pyc[m
[1mindex 27103f5..b727cb6 100644[m
Binary files a/blog/__pycache__/admin.cpython-37.pyc and b/blog/__pycache__/admin.cpython-37.pyc differ
[1mdiff --git a/blog/__pycache__/urls.cpython-37.pyc b/blog/__pycache__/urls.cpython-37.pyc[m
[1mindex d1d698d..caf87dd 100644[m
Binary files a/blog/__pycache__/urls.cpython-37.pyc and b/blog/__pycache__/urls.cpython-37.pyc differ
[1mdiff --git a/blog/__pycache__/views.cpython-37.pyc b/blog/__pycache__/views.cpython-37.pyc[m
[1mindex e9151da..eb6d3d4 100644[m
Binary files a/blog/__pycache__/views.cpython-37.pyc and b/blog/__pycache__/views.cpython-37.pyc differ
[1mdiff --git a/blog/urls.py b/blog/urls.py[m
[1mindex 0dd9032..84a6197 100644[m
[1m--- a/blog/urls.py[m
[1m+++ b/blog/urls.py[m
[36m@@ -8,4 +8,5 @@[m [murlpatterns = [[m
     path('user/<int:id>', views.user_detail, name = "user_detail"),[m
     path('blogs', views.blog_list, name = "blog_list"),[m
     path('blog', views.insert_blog, name = "insert_blog"),[m
[32m+[m[32m    path('usersnew', views.user_new, name = "user_new"),[m
 ][m
\ No newline at end of file[m
[1mdiff --git a/blog/views.py b/blog/views.py[m
[1mindex d141ae4..c52b5b0 100644[m
[1m--- a/blog/views.py[m
[1m+++ b/blog/views.py[m
[36m@@ -46,5 +46,14 @@[m [mdef insert_blog(request):[m
     new_blog.save()[m
 [m
     return JsonResponse(data)[m
[32m+[m
[32m+[m[32m#crud operations for BlogNew model[m
[32m+[m
[32m+[m[32mdef user_new(request):[m
[32m+[m[32m    data = [[m
[32m+[m[32m        {'name': 'prashanth', 'email': 'prashanth@gmail.com'},[m
[32m+[m[32m        {'name': 'komal', 'email': 'komal@yahoo.com'},[m
[32m+[m[32m    ][m
[32m+[m[32m    return JsonResponse(data, safe=False)[m
     [m
 [m
[1mdiff --git a/training/__pycache__/urls.cpython-37.pyc b/training/__pycache__/urls.cpython-37.pyc[m
[1mindex add8f00..a229dd5 100644[m
Binary files a/training/__pycache__/urls.cpython-37.pyc and b/training/__pycache__/urls.cpython-37.pyc differ

[33mcommit a1634828cee76d09166273336e75a75167012dec[m
Author: Navyashree H C <navyashree@redintegro.com>
Date:   Tue Nov 3 17:30:53 2020 +0530

    Add model to Django admin

[1mdiff --git a/blog/__pycache__/admin.cpython-37.pyc b/blog/__pycache__/admin.cpython-37.pyc[m
[1mindex 0a0b0f8..27103f5 100644[m
Binary files a/blog/__pycache__/admin.cpython-37.pyc and b/blog/__pycache__/admin.cpython-37.pyc differ
[1mdiff --git a/blog/admin.py b/blog/admin.py[m
[1mindex 26608a1..29e9e9f 100644[m
[1m--- a/blog/admin.py[m
[1m+++ b/blog/admin.py[m
[36m@@ -1,4 +1,5 @@[m
 from django.contrib import admin[m
[31m-from .models import Blog[m
[32m+[m[32mfrom .models import Blog, BlogNew[m
 [m
 admin.site.register(Blog)[m
[32m+[m[32madmin.site.register(BlogNew)[m

[33mcommit 3bc6ab83a0298f3956452d7315e297f5d83fe75f[m
Author: Navyashree H C <navyashree@redintegro.com>
Date:   Tue Nov 3 17:27:58 2020 +0530

    Adding a model in model.py

[1mdiff --git a/.vscode/settings.json b/.vscode/settings.json[m
[1mindex b5ffdd2..ca7a9fc 100644[m
[1m--- a/.vscode/settings.json[m
[1m+++ b/.vscode/settings.json[m
[36m@@ -1,3 +1,4 @@[m
 {[m
[31m-    "python.pythonPath": "env\\Scripts\\python.exe"[m
[32m+[m[32m    "python.pythonPath": "env\\Scripts\\python.exe",[m
[32m+[m[32m    "git.ignoreLimitWarning": true[m
 }[m
\ No newline at end of file[m
[1mdiff --git a/blog/__pycache__/admin.cpython-37.pyc b/blog/__pycache__/admin.cpython-37.pyc[m
[1mindex 6799ec1..0a0b0f8 100644[m
Binary files a/blog/__pycache__/admin.cpython-37.pyc and b/blog/__pycache__/admin.cpython-37.pyc differ
[1mdiff --git a/blog/__pycache__/models.cpython-37.pyc b/blog/__pycache__/models.cpython-37.pyc[m
[1mindex a9a1b94..b49e0e0 100644[m
Binary files a/blog/__pycache__/models.cpython-37.pyc and b/blog/__pycache__/models.cpython-37.pyc differ
[1mdiff --git a/blog/migrations/0002_blognew.py b/blog/migrations/0002_blognew.py[m
[1mnew file mode 100644[m
[1mindex 0000000..7760053[m
[1m--- /dev/null[m
[1m+++ b/blog/migrations/0002_blognew.py[m
[36m@@ -0,0 +1,23 @@[m
[32m+[m[32m# Generated by Django 3.1.3 on 2020-11-03 11:53[m
[32m+[m
[32m+[m[32mfrom django.db import migrations, models[m
[32m+[m
[32m+[m
[32m+[m[32mclass Migration(migrations.Migration):[m
[32m+[m
[32m+[m[32m    dependencies = [[m
[32m+[m[32m        ('blog', '0001_initial'),[m
[32m+[m[32m    ][m
[32m+[m
[32m+[m[32m    operations = [[m
[32m+[m[32m        migrations.CreateModel([m
[32m+[m[32m            name='BlogNew',[m
[32m+[m[32m            fields=[[m
[32m+[m[32m                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),[m
[32m+[m[32m                ('name', models.TextField()),[m
[32m+[m[32m                ('description', models.TextField()),[m
[32m+[m[32m                ('posted_by', models.TextField()),[m
[32m+[m[32m                ('posted_on', models.DateTimeField()),[m
[32m+[m[32m            ],[m
[32m+[m[32m        ),[m
[32m+[m[32m    ][m
[1mdiff --git a/blog/migrations/__pycache__/0002_blognew.cpython-37.pyc b/blog/migrations/__pycache__/0002_blognew.cpython-37.pyc[m
[1mnew file mode 100644[m
[1mindex 0000000..092ebc0[m
Binary files /dev/null and b/blog/migrations/__pycache__/0002_blognew.cpython-37.pyc differ
[1mdiff --git a/blog/models.py b/blog/models.py[m
[1mindex 5c7810c..665b892 100644[m
[1m--- a/blog/models.py[m
[1m+++ b/blog/models.py[m
[36m@@ -3,4 +3,10 @@[m [mfrom django.db import models[m
 class Blog(models.Model):[m
     name = models.TextField()[m
     posted_by = models.TextField()[m
[32m+[m[32m    posted_on = models.DateTimeField()[m
[32m+[m
[32m+[m[32mclass BlogNew(models.Model):[m
[32m+[m[32m    name = models.TextField()[m
[32m+[m[32m    description = models.TextField()[m
[32m+[m[32m    posted_by = models.TextField()[m
     posted_on = models.DateTimeField()[m
\ No newline at end of file[m

[33mcommit 527f3ec762c38dfa383893e70eb1ccb404fb9f10[m[33m ([m[1;31morigin/main[m[33m)[m
Author: Navyashree H C <navyashree@redintegro.com>
Date:   Tue Nov 3 17:00:53 2020 +0530

    first stage

[1mdiff --git a/.vscode/settings.json b/.vscode/settings.json[m
[1mnew file mode 100644[m
[1mindex 0000000..b5ffdd2[m
[1m--- /dev/null[m
[1m+++ b/.vscode/settings.json[m
[36m@@ -0,0 +1,3 @@[m
[32m+[m[32m{[m
[32m+[m[32m    "python.pythonPath": "env\\Scripts\\python.exe"[m
[32m+[m[32m}[m
\ No newline at end of file[m
[1mdiff --git a/blog/__init__.py b/blog/__init__.py[m
[1mnew file mode 100644[m
[1mindex 0000000..e69de29[m
[1mdiff --git a/blog/__pycache__/__init__.cpython-37.pyc b/blog/__pycache__/__init__.cpython-37.pyc[m
[1mnew file mode 100644[m
[1mindex 0000000..0f1df89[m
Binary files /dev/null and b/blog/__pycache__/__init__.cpython-37.pyc differ
[1mdiff --git a/blog/__pycache__/admin.cpython-37.pyc b/blog/__pycache__/admin.cpython-37.pyc[m
[1mnew file mode 100644[m
[1mindex 0000000..6799ec1[m
Binary files /dev/null and b/blog/__pycache__/admin.cpython-37.pyc differ
[1mdiff --git a/blog/__pycache__/apps.cpython-37.pyc b/blog/__pycache__/apps.cpython-37.pyc[m
[1mnew file mode 100644[m
[1mindex 0000000..43cc4f4[m
Binary files /dev/null and b/blog/__pycache__/apps.cpython-37.pyc differ
[1mdiff --git a/blog/__pycache__/models.cpython-37.pyc b/blog/__pycache__/models.cpython-37.pyc[m
[1mnew file mode 100644[m
[1mindex 0000000..a9a1b94[m
Binary files /dev/null and b/blog/__pycache__/models.cpython-37.pyc differ
[1mdiff --git a/blog/__pycache__/urls.cpython-37.pyc b/blog/__pycache__/urls.cpython-37.pyc[m
[1mnew file mode 100644[m
[1mindex 0000000..d1d698d[m
Binary files /dev/null and b/blog/__pycache__/urls.cpython-37.pyc differ
[1mdiff --git a/blog/__pycache__/views.cpython-37.pyc b/blog/__pycache__/views.cpython-37.pyc[m
[1mnew file mode 100644[m
[1mindex 0000000..e9151da[m
Binary files /dev/null and b/blog/__pycache__/views.cpython-37.pyc differ
[1mdiff --git a/blog/admin.py b/blog/admin.py[m
[1mnew file mode 100644[m
[1mindex 0000000..26608a1[m
[1m--- /dev/null[m
[1m+++ b/blog/admin.py[m
[36m@@ -0,0 +1,4 @@[m
[32m+[m[32mfrom django.contrib import admin[m
[32m+[m[32mfrom .models import Blog[m
[32m+[m
[32m+[m[32madmin.site.register(Blog)[m
[1mdiff --git a/blog/apps.py b/blog/apps.py[m
[1mnew file mode 100644[m
[1mindex 0000000..7930587[m
[1m--- /dev/null[m
[1m+++ b/blog/apps.py[m
[36m@@ -0,0 +1,5 @@[m
[32m+[m[32mfrom django.apps import AppConfig[m
[32m+[m
[32m+[m
[32m+[m[32mclass BlogConfig(AppConfig):[m
[32m+[m[32m    name = 'blog'[m
[1mdiff --git a/blog/migrations/0001_initial.py b/blog/migrations/0001_initial.py[m
[1mnew file mode 100644[m
[1mindex 0000000..dc680ff[m
[1m--- /dev/null[m
[1m+++ b/blog/migrations/0001_initial.py[m
[36m@@ -0,0 +1,23 @@[m
[32m+[m[32m# Generated by Django 3.1.3 on 2020-11-02 09:49[m
[32m+[m
[32m+[m[32mfrom django.db import migrations, models[m
[32m+[m
[32m+[m
[32m+[m[32mclass Migration(migrations.Migration):[m
[32m+[m
[32m+[m[32m    initial = True[m
[32m+[m
[32m+[m[32m    dependencies = [[m
[32m+[m[32m    ][m
[32m+[m
[32m+[m[32m    operations = [[m
[32m+[m[32m        migrations.CreateModel([m
[32m+[m[32m            name='Blog',[m
[32m+[m[32m            fields=[[m
[32m+[m[32m                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),[m
[32m+[m[32m                ('name', models.TextField()),[m
[32m+[m[32m                ('posted_by', models.TextField()),[m
[32m+[m[32m                ('posted_on', models.DateTimeField()),[m
[32m+[m[32m            ],[m
[32m+[m[32m        ),[m
[32m+[m[32m    ][m
[1mdiff --git a/blog/migrations/__init__.py b/blog/migrations/__init__.py[m
[1mnew file mode 100644[m
[1mindex 0000000..e69de29[m
[1mdiff --git a/blog/migrations/__pycache__/0001_initial.cpython-37.pyc b/blog/migrations/__pycache__/0001_initial.cpython-37.pyc[m
[1mnew file mode 100644[m
[1mindex 0000000..ac7a293[m
Binary files /dev/null and b/blog/migrations/__pycache__/0001_initial.cpython-37.pyc differ
[1mdiff --git a/blog/migrations/__pycache__/__init__.cpython-37.pyc b/blog/migrations/__pycache__/__init__.cpython-37.pyc[m
[1mnew file mode 100644[m
[1mindex 0000000..de50277[m
Binary files /dev/null and b/blog/migrations/__pycache__/__init__.cpython-37.pyc differ
[1mdiff --git a/blog/models.py b/blog/models.py[m
[1mnew file mode 100644[m
[1mindex 0000000..5c7810c[m
[1m--- /dev/null[m
[1m+++ b/blog/models.py[m
[36m@@ -0,0 +1,6 @@[m
[32m+[m[32mfrom django.db import models[m
[32m+[m
[32m+[m[32mclass Blog(models.Model):[m
[32m+[m[32m    name = models.TextField()[m
[32m+[m[32m    posted_by = models.TextField()[m
[32m+[m[32m    posted_on = models.DateTimeField()[m
\ No newline at end of file[m
[1mdiff --git a/blog/tests.py b/blog/tests.py[m
[1mnew file mode 100644[m
[1mindex 0000000..7ce503c[m
[1m--- /dev/null[m
[1m+++ b/blog/tests.py[m
[36m@@ -0,0 +1,3 @@[m
[32m+[m[32mfrom django.test import TestCase[m
[32m+[m
[32m+[m[32m# Create your tests here.[m
[1mdiff --git a/blog/urls.py b/blog/urls.py[m
[1mnew file mode 100644[m
[1mindex 0000000..0dd9032[m
[1m--- /dev/null[m
[1m+++ b/blog/urls.py[m
[36m@@ -0,0 +1,11 @@[m
[32m+[m[32mfrom django.urls import path[m
[32m+[m[32mfrom . import views[m
[32m+[m
[32m+[m[32murlpatterns = [[m
[32m+[m[32m    path('', views.hello_world, name = "hello_world"),[m
[32m+[m[32m    path('users', views.users_list, name = "users_list"),[m
[32m+[m[32m    path('user', views.insert_user, name = "insert_user"),[m
[32m+[m[32m    path('user/<int:id>', views.user_detail, name = "user_detail"),[m
[32m+[m[32m    path('blogs', views.blog_list, name = "blog_list"),[m
[32m+[m[32m    path('blog', views.insert_blog, name = "insert_blog"),[m
[32m+[m[32m][m
\ No newline at end of file[m
[1mdiff --git a/blog/views.py b/blog/views.py[m
[1mnew file mode 100644[m
[1mindex 0000000..d141ae4[m
[1m--- /dev/null[m
[1m+++ b/blog/views.py[m
[36m@@ -0,0 +1,50 @@[m
[32m+[m[32mfrom django.shortcuts import render[m
[32m+[m[32mfrom django.http import HttpResponse,JsonResponse[m
[32m+[m[32mimport json[m
[32m+[m[32mfrom django.views.decorators.http import require_http_methods[m
[32m+[m[32mfrom django.views.decorators.csrf import csrf_exempt[m
[32m+[m[32mfrom .models import Blog[m
[32m+[m[32mfrom django.core import serializers[m
[32m+[m[32mfrom django.utils import timezone[m
[32m+[m
[32m+[m[32mdef hello_world(request):[m
[32m+[m[32m    return HttpResponse("Hello, world.")[m
[32m+[m
[32m+[m[32mdef users_list(request):[m
[32m+[m[32m    data = [[m
[32m+[m[32m        {'name': "navya", 'email': 'navya@gmail.com'},[m
[32m+[m[32m        {'name': "charlie", 'email': 'charlie@gmail.com'}[m
[32m+[m[32m    ][m
[32m+[m[32m    return JsonResponse(data, safe=False)[m
[32m+[m
[32m+[m[32m@csrf_exempt[m
[32m+[m[32m@require_http_methods(['POST'])[m
[32m+[m[32mdef insert_user(request):[m
[32m+[m[32m    data = json.loads(request.body.decode('utf-8'))[m
[32m+[m[32m    return JsonResponse(data, safe=False)[m
[32m+[m
[32m+[m[32mdef user_detail(request,id):[m
[32m+[m[32m    data = {'name': 'navya', 'email': 'navya@gmail.com', 'id': id}[m
[32m+[m[32m    return JsonResponse(data)[m
[32m+[m
[32m+[m[32mdef blog_list(request):[m
[32m+[m[32m    data = Blog.objects.all()[m
[32m+[m[32m    response = serializers.serialize("json", data)[m
[32m+[m[32m    return HttpResponse(response, content_type="application/json")[m
[32m+[m
[32m+[m[32m@csrf_exempt[m
[32m+[m[32m@require_http_methods(['POST'])[m
[32m+[m[32mdef insert_blog(request):[m
[32m+[m[32m    data = json.loads(request.body.decode('utf-8'))[m
[32m+[m
[32m+[m[32m    new_blog = Blog([m
[32m+[m[32m        name=data['name'],[m
[32m+[m[32m        posted_by=data['postedBy'],[m
[32m+[m[32m        posted_on=timezone.now(),[m
[32m+[m[32m    )[m
[32m+[m
[32m+[m[32m    new_blog.save()[m
[32m+[m
[32m+[m[32m    return JsonResponse(data)[m
[32m+[m[41m    [m
[32m+[m
[1mdiff --git a/db.sqlite3 b/db.sqlite3[m
[1mnew file mode 100644[m
[1mindex 0000000..a0099f0[m
Binary files /dev/null and b/db.sqlite3 differ
[1mdiff --git a/env/Lib/site-packages/Django-3.1.3.dist-info/AUTHORS b/env/Lib/site-packages/Django-3.1.3.dist-info/AUTHORS[m
[1mnew file mode 100644[m
[1mindex 0000000..4cdfa6b[m
[1m--- /dev/null[m
[1m+++ b/env/Lib/site-packages/Django-3.1.3.dist-info/AUTHORS[m
[36m@@ -0,0 +1,981 @@[m
[32m+[m[32mDjango was originally created in late 2003 at World Online, the Web division[m
[32m+[m[32mof the Lawrence Journal-World newspaper in Lawrence, Kansas.[m
[32m+[m
[32m+[m[32mHere is an inevitably incomplete list of MUCH-APPRECIATED CONTRIBUTORS --[m
[32m+[m[32mpeople who have submitted patches, reported bugs, added translations, helped[m
[32m+[m[32manswer newbie questions, and generally made Django that much better:[m
[32m+[m
[32m+[m[32m    Aaron Cannon <cannona@fireantproductions.com>[m
[32m+[m[32m    Aaron Swartz <http://www.aaronsw.com/>[m
[32m+[m[32m    Aaron T. Myers <atmyers@gmail.com>[m
[32m+[m[32m    Abeer Upadhyay <ab.esquarer@gmail.com>[m
[32m+[m[32m    Abhijeet Viswa <abhijeetviswa@gmail.com>[m
[32m+[m[32m    Abhinav Patil <https://github.com/ubadub/>[m
[32m+[m[32m    Abhishek Gautam <abhishekg1128@yahoo.com>[m
[32m+[m[32m    Adam Allred <adam.w.allred@gmail.com>[m
[32m+[m[32m    Adam Bogdał <adam@bogdal.pl>[m
[32m+[m[32m    Adam Donaghy[m
[32m+[m[32m    Adam Johnson <https://github.com/adamchainz>[m
[32m+[m[32m    Adam Malinowski <https://adammalinowski.co.uk/>[m
[32m+[m[32m    Adam Vandenberg[m
[32m+[m[32m    Adiyat Mubarak <adiyatmubarak@gmail.com>[m
[32m+[m[32m    Adnan Umer <u.adnan@outlook.com>[m
[32m+[m[32m    Adrian Holovaty <adrian@holovaty.com>[m
[32m+[m[32m    Adrien Lemaire <lemaire.adrien@gmail.com>[m
[32m+[m[32m    Afonso Fernández Nogueira <fonzzo.django@gmail.com>[m
[32m+[m[32m    AgarFu <heaven@croasanaso.sytes.net>[m
[32m+[m[32m    Ahmad Alhashemi <trans@ahmadh.com>[m
[32m+[m[32m    Ahmad Al-Ibrahim[m
[32m+[m[32m    Ahmed Eltawela <https://github.com/ahmedabt>[m
[32m+[m[32m    ajs <adi@sieker.info>[m
[32m+[m[32m    Akash Agrawal <akashrocksha@gmail.com>[m
[32m+[m[32m    Akis Kesoglou <akiskesoglou@gmail.com>[m
[32m+[m[32m    Aksel Ethem <aksel.ethem@gmail.com>[m
[32m+[m[32m    Akshesh Doshi <aksheshdoshi+django@gmail.com>[m
[32m+[m[32m    alang@bright-green.com[m
[32m+[m[32m    Alasdair Nicol <https://al.sdair.co.uk/>[m
[32m+[m[32m    Albert Wang <https://github.com/albertyw/>[m
[32m+[m[32m    Alcides Fonseca[m
[32m+[m[32m    Aldian Fazrihady <mobile@aldian.net>[m
[32m+[m[32m    Aleksandra Sendecka <asendecka@hauru.eu>[m
[32m+[m[32m    Aleksi Häkli <aleksi.hakli@iki.fi>[m
[32m+[m[32m    Alexander Dutton <dev@alexdutton.co.uk>[m
[32m+[m[32m    Alexander Myodov <alex@myodov.com>[m
[32m+[m[32m    Alexandr Tatarinov <tatarinov1997@gmail.com>[m
[32m+[m[32m    Alex Aktsipetrov <alex.akts@gmail.com>[m
[32m+[m[32m    Alex Becker <https://alexcbecker.net/>[m
[32m+[m[32m    Alex Couper <http://alexcouper.com/>[m
[32m+[m[32m    Alex Dedul[m
[32m+[m[32m    Alex Gaynor <alex.gaynor@gmail.com>[m
[32m+[m[32m    Alex Hill <alex@hill.net.au>[m
[32m+[m[32m    Alex Ogier <alex.ogier@gmail.com>[m
[32m+[m[32m    Alex Robbins <alexander.j.robbins@gmail.com>[m
[32m+[m[32m    Alexey Boriskin <alex@boriskin.me>[m
[32m+[m[32m    Alexey Tsivunin <most-208@yandex.ru>[m
[32m+[m[32m    Aljosa Mohorovic <aljosa.mohorovic@gmail.com>[m
[32m+[m[32m    Amit Chakradeo <https://amit.chakradeo.net/>[m
[32m+[m[32m    Amit Ramon <amit.ramon@gmail.com>[m
[32m+[m[32m    Amit Upadhyay <http://www.amitu.com/blog/>[m
[32m+[m[32m    A. Murat Eren <